// Date: 23-7-2013 19:37:09
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX
package com.Mod_Ores.Mobs.Model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelGroundhog extends ModelBase
{
  //fields
    ModelRenderer Base;
    ModelRenderer LegFrontLeft;
    ModelRenderer LegFrontRight;
    ModelRenderer LegBackLeft;
    ModelRenderer LegBackRight;
    ModelRenderer SideRight;
    ModelRenderer SideLeft;
    ModelRenderer SideRightPart3Back;
    ModelRenderer SideRightPart2Front;
    ModelRenderer SideLeftPart2Front;
    ModelRenderer SideLeftPart3Back;
    ModelRenderer SideTop;
    ModelRenderer SideTopPart2Front;
    ModelRenderer SideTopPart3Back;
    ModelRenderer TailPart1;
    ModelRenderer TailPart2;
    ModelRenderer TailPart3;
    ModelRenderer Head;
  
  public ModelGroundhog()
  {
    textureWidth = 128;
    textureHeight = 128;
    
      Base = new ModelRenderer(this, 64, 100);
      Base.addBox(0F, 0F, 0F, 12, 8, 20);
      Base.setRotationPoint(-6F, 12F, -8F);
      Base.setTextureSize(128, 128);
      Base.mirror = true;
      setRotation(Base, 0F, 0F, 0F);
      LegFrontLeft = new ModelRenderer(this, 28, 121);
      LegFrontLeft.addBox(0F, 0F, 0F, 3, 4, 3);
      LegFrontLeft.setRotationPoint(2F, 20F, -7F);
      LegFrontLeft.setTextureSize(128, 128);
      LegFrontLeft.mirror = true;
      setRotation(LegFrontLeft, 0F, 0F, 0F);
      LegFrontRight = new ModelRenderer(this, 28, 121);
      LegFrontRight.addBox(0F, 0F, 0F, 3, 4, 3);
      LegFrontRight.setRotationPoint(-5F, 20F, -7F);
      LegFrontRight.setTextureSize(128, 128);
      LegFrontRight.mirror = true;
      setRotation(LegFrontRight, 0F, 0F, 0F);
      LegBackLeft = new ModelRenderer(this, 28, 121);
      LegBackLeft.addBox(0F, 0F, 0F, 3, 4, 3);
      LegBackLeft.setRotationPoint(2F, 20F, 8F);
      LegBackLeft.setTextureSize(128, 128);
      LegBackLeft.mirror = true;
      setRotation(LegBackLeft, 0F, 0F, 0F);
      LegBackRight = new ModelRenderer(this, 28, 121);
      LegBackRight.addBox(0F, 0F, 0F, 3, 4, 3);
      LegBackRight.setRotationPoint(-5F, 20F, 8F);
      LegBackRight.setTextureSize(128, 128);
      LegBackRight.mirror = true;
      setRotation(LegBackRight, 0F, 0F, 0F);
      SideRight = new ModelRenderer(this, 98, 80);
      SideRight.addBox(0F, 0F, 0F, 1, 6, 14);
      SideRight.setRotationPoint(-7F, 13F, -5F);
      SideRight.setTextureSize(128, 128);
      SideRight.mirror = true;
      setRotation(SideRight, 0.0174533F, 0F, 0F);
      SideLeft = new ModelRenderer(this, 68, 80);
      SideLeft.addBox(0F, 0F, 0F, 1, 6, 14);
      SideLeft.setRotationPoint(6F, 13F, -5F);
      SideLeft.setTextureSize(128, 128);
      SideLeft.mirror = true;
      setRotation(SideLeft, 0F, 0F, 0F);
      SideRightPart3Back = new ModelRenderer(this, 40, 116);
      SideRightPart3Back.addBox(0F, 0F, 0F, 1, 4, 2);
      SideRightPart3Back.setRotationPoint(-7F, 14F, 9F);
      SideRightPart3Back.setTextureSize(128, 128);
      SideRightPart3Back.mirror = true;
      setRotation(SideRightPart3Back, 0F, 0F, 0F);
      SideRightPart2Front = new ModelRenderer(this, 40, 122);
      SideRightPart2Front.addBox(0F, 0F, 0F, 1, 4, 2);
      SideRightPart2Front.setRotationPoint(-7F, 14F, -7F);
      SideRightPart2Front.setTextureSize(128, 128);
      SideRightPart2Front.mirror = true;
      setRotation(SideRightPart2Front, 0F, 0F, 0F);
      SideLeftPart2Front = new ModelRenderer(this, 46, 122);
      SideLeftPart2Front.addBox(0F, 0F, 0F, 1, 4, 2);
      SideLeftPart2Front.setRotationPoint(6F, 14F, -7F);
      SideLeftPart2Front.setTextureSize(128, 128);
      SideLeftPart2Front.mirror = true;
      setRotation(SideLeftPart2Front, 0F, 0F, 0F);
      SideLeftPart3Back = new ModelRenderer(this, 46, 116);
      SideLeftPart3Back.addBox(0F, 0F, 0F, 1, 4, 2);
      SideLeftPart3Back.setRotationPoint(6F, 14F, 9F);
      SideLeftPart3Back.setTextureSize(128, 128);
      SideLeftPart3Back.mirror = true;
      setRotation(SideLeftPart3Back, 0.0174533F, 0F, 0F);
      SideTop = new ModelRenderer(this, 80, 63);
      SideTop.addBox(0F, 0F, 0F, 8, 1, 16);
      SideTop.setRotationPoint(-4F, 11F, -6F);
      SideTop.setTextureSize(128, 128);
      SideTop.mirror = true;
      setRotation(SideTop, 0F, 0F, 0F);
      SideTopPart2Front = new ModelRenderer(this, 114, 61);
      SideTopPart2Front.addBox(0F, 0F, 0F, 6, 1, 1);
      SideTopPart2Front.setRotationPoint(-3F, 11F, -7F);
      SideTopPart2Front.setTextureSize(128, 128);
      SideTopPart2Front.mirror = true;
      setRotation(SideTopPart2Front, 0F, 0F, 0F);
      SideTopPart3Back = new ModelRenderer(this, 100, 61);
      SideTopPart3Back.addBox(0F, 0F, 0F, 6, 1, 1);
      SideTopPart3Back.setRotationPoint(-3F, 11F, 10F);
      SideTopPart3Back.setTextureSize(128, 128);
      SideTopPart3Back.mirror = true;
      setRotation(SideTopPart3Back, 0F, 0F, 0F);
      TailPart1 = new ModelRenderer(this, 0, 104);
      TailPart1.addBox(0F, 0F, 0F, 8, 5, 6);
      TailPart1.setRotationPoint(-4F, 14F, 12F);
      TailPart1.setTextureSize(128, 128);
      TailPart1.mirror = true;
      setRotation(TailPart1, 0F, 0F, 0F);
      TailPart2 = new ModelRenderer(this, 0, 92);
      TailPart2.addBox(0F, 0F, 0F, 6, 3, 7);
      TailPart2.setRotationPoint(-3F, 15F, 18F);
      TailPart2.setTextureSize(128, 128);
      TailPart2.mirror = true;
      setRotation(TailPart2, 0F, 0F, 0F);
      TailPart3 = new ModelRenderer(this, 0, 79);
      TailPart3.addBox(0F, 0F, 0F, 2, 1, 12);
      TailPart3.setRotationPoint(-1F, 17F, 25F);
      TailPart3.setTextureSize(128, 128);
      TailPart3.mirror = true;
      setRotation(TailPart3, 0F, 0F, 0F);
      Head = new ModelRenderer(this, 0, 117);
      Head.addBox(0F, 0F, 0F, 8, 5, 6);
      Head.setRotationPoint(-4F, 14F, -14F);
      Head.setTextureSize(128, 128);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      --this.LegFrontLeft.rotationPointX;
      ++this.LegFrontRight.rotationPointX;
      this.LegFrontLeft.rotationPointZ += 0.0F;
      this.LegFrontRight.rotationPointZ += 0.0F;
      --this.LegBackLeft.rotationPointX;
      ++this.LegBackRight.rotationPointX;
      --this.LegBackLeft.rotationPointZ;
      --this.LegBackRight.rotationPointZ;
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Base.render(f5);
    LegFrontLeft.render(f5);
    LegFrontRight.render(f5);
    LegBackLeft.render(f5);
    LegBackRight.render(f5);
    SideRight.render(f5);
    SideLeft.render(f5);
    SideRightPart3Back.render(f5);
    SideRightPart2Front.render(f5);
    SideLeftPart2Front.render(f5);
    SideLeftPart3Back.render(f5);
    SideTop.render(f5);
    SideTopPart2Front.render(f5);
    SideTopPart3Back.render(f5);
    TailPart1.render(f5);
    TailPart2.render(f5);
    TailPart3.render(f5);
    Head.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity)
  {
    this.Head.rotateAngleX = par5 / (180F / (float)Math.PI);
    this.Head.rotateAngleY = par4 / (180F / (float)Math.PI);
    //this.Base.rotateAngleX = ((float)Math.PI / 2F);
    this.LegFrontLeft.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
    this.LegFrontRight.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
    this.LegBackLeft.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
    this.LegBackRight.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
  }

}
